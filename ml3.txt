import pandas as pd
import seaborn as sns
import numpy as np
df=pd.read_csv('Admission_predict.csv' )
df.head
from sklearn.preprocessing import Binarizer

bi=Binarizer (threshold=0.75)
df[ ‘Chance of Admit ']=bi.fit_transform(df[['Chance of Admit ']])
df .head()
x=df.drop('Chance of Admit ' ,axis=1)
y=df['Chance of Admit *]
y=y.astype(‘int')
sns.countplot(x=y)
y.value_counts()

from sklearn.tree import DecisionTreeClassifier

classifier=DecisionTreeClassifier(random_state=0)

classifier.fit(x_train, y_train)
y_pred=classifier.predict(x_test)
result=pd.DataFrame({'actual':y_test, ‘predicted’ :y_pred})
result
from sklearn.metrics import ConfusionMatrixDisplay, accuracy_score, classification_repor

ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test,y_pred)
print(classification_report(y_test, y_pred))
from sklearn.tree import plot_tree
import matplotlib.pyplot as plt
plt.figure(figsize=(12,12))
plot_tree(classifier, fontsize=8, filled=True, rounded=True)


